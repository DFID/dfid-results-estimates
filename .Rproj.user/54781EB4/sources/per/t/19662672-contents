the_plan <-
  drake_plan(

#### load data ----

## remote dept data from dept data tab in each template
#template_path = "",
#dept_raw = readDeptData(template_path),

## local dept data already concatenated
dept_raw = read_csv("data/dept_raw_achieved.csv"),

## local data (other)
a2f_raw = read_csv("data/a2f.csv") %>%
          select(Department, `Project Title`, Female, Male, Total) %>%
          group_by(Department) %>%
          mutate(Department = recode(Department, PSD="Private Sector", ISD="Inclusive Societies")) %>%
          clean_names(.),

climate_spend = read_csv("data/climate_spend.csv"),

energy = read_csv("data/energy.csv") %>%
               pivot_longer(.,
               cols=c(`2015/16`:`2019/20`),
               names_to = c("year"),
               values_to="energy"),

family_drf = read_csv("data/family_drf.csv"), # don't clean names to keep year col format

inputs = read_csv("data/inputs.csv"),

jobs_raw = read_csv("data/jobs.csv") %>%
  select(-Prog) %>%
  group_by(Office)  %>%
  summarise_all(sum) %>%
  pivot_longer(.,
               cols=c("male", "female", "results"),
               names_to=c("gender" ),
               values_to="results"
  ) %>%
  rename(department="Office") %>%
  mutate(gender=recode(gender, results="total")) %>%
  mutate(department = recode(department, PSD="Private Sector")),

multilat = read_csv("data/multilat.csv"),

oda_gni = read_csv("data/sid_oda_annual.csv") %>% clean_names(.),

pfm = read_csv("data/pfm.csv") %>% select(dept,`2015/16`:`2019/20`) %>% replace(is.na(.), "-"),

# cmp discounts
family_total_cmp = read_csv("data/family_total_cmp_discount.csv"),

family_additional_cmp = read_csv("data/family_additional_cmp_discount.csv"),

education_cmp = read_csv("data/education_cmp_discount.csv") %>% clean_names(.),

nutrition_cmp = read_csv("data/nutrition_cmp_discount.csv") %>% clean_names(.),

# accessory stuff
tables_titles = read_csv("data/table_titles.csv"),
lookup = read_csv("data/dept_lookup.csv"),




#### Format Deptarment Data ----
dept  = tidyDept(dept_raw, multilat, lookup),

#### Indicator Dataframes  -----

a2f = filterA2F(a2f_raw),

education = filterEducation(dept),

fp_total = filterFPTotal(dept),

fp_additional = filterFPAdditionalTotals(dept, family_drf),

fp_additional_plots = filterFPAdditionalBreakdown(dept, family_drf),

immunisations = filterImmunisations(dept),

jobs = filterJobsGender(jobs_raw),

humanitarian = filterHumanitarian(dept),

nutri_gender  = filterNutritionGender(dept),

nutri_intensity = filterNutritionIntensity(dept),

wash = filterWASH(dept),





#### Disaggregation Summaries ----

#a2f
a2f_region_data =  regionDataA2F(a2f_raw, lookup),

#education
edu_fragility_data  = summariseFragility(education),
edu_region_data  = summariseRegion(education),

#family
fp_total_fragility_data = summariseFragility(fp_total),
fp_total_region_data = summariseRegion(fp_total),
fp_additional_fragility_data = summariseFragility(fp_additional_plots),
fp_additional_region_data = summariseRegion(fp_additional_plots),

# humanitarian
human_fragility_data  = summariseFragility(humanitarian),
human_region_data  = summariseRegion(humanitarian),

#jobs
jobs_region_data = summariseJobsRegion(jobs_raw, lookup),

#nutrition
nutrition_fragility_data  = summariseFragility(nutri_gender),
nutrition_intensity_data  = summariseNutritionIntensity(nutri_intensity),
nutrition_region_data  = summariseRegion(nutri_gender),

#wash
wash_fragility_data  = summariseFragility(wash),
wash_region_data  = summariseRegion(wash),





#### Plots ----

a2f_region_plot = plotA2FRegion(a2f_region_data),

climate_spend_plot = plotClimateSpend(climate_spend),

edu_frag_plot = plotEduFragility(edu_fragility_data),
edu_region_plot  =  plotEduRegion(edu_region_data),

energy_cumulative_plot = plotEnergyCumulative(energy),

fp_total_frag_plot = plotFPTotalFragility(fp_total_fragility_data),
fp_total_region_plot  = plotFPTotalRegion(fp_total_region_data),
fp_additional_frag_plot  = plotFPAdditionalFragility(fp_additional_fragility_data),
fp_additional_region_plot = plotFPAdditionalRegion(fp_additional_region_data),

human_frag_plot = plotHumanFragility(human_fragility_data),
human_region_plot = plotHumanRegion(human_region_data),

jobs_region_plot = plotJobsRegion(jobs_region_data),

nutrition_frag_plot = plotNutritionFragility(nutrition_fragility_data),
nutrition_region_plot = plotNutritionRegion(nutrition_region_data),
nutrition_intensity_plot = plotNutritionIntensity(nutrition_intensity_data),

oda_gni_plot = plotOdaGni(oda_gni),

pfm_plot =  plotPFM(pfm),

wash_frag_plot = plotWASHFragility(wash_fragility_data),
wash_region_plot = plotWASHRegion(wash_region_data),




#### Tables ----

a2f_table = a2f %>% clean_names("title"),

cdc_table = tableCDC(inputs),

climate_table = tableClimate(inputs),

devcap_table = tableDevCap(inputs),

energy_table = tableEnergy(energy),

education_table =  tableEducation(education, education_cmp),

fp_total_table = tableFPTotal(fp_total, family_total_cmp),
fp_additional_table = tableFPAdditional(fp_additional, family_additional_cmp),

fcas_table = tableFCAS(inputs),

humanitarian_table = tableHumanitarian(humanitarian), #double counting already included in figures so nothing to add

immunisations_table = immunisations %>% clean_names("title") %>% rename_at(vars(contains("X")), ~(stringr::str_replace_all(., 'X', ''))),

improve_tax_table = tableTax(inputs),

invest_multilat_table = tableMultilat(inputs),

jobs_table = jobs %>% clean_names("title"),

malaria_table = tableMalaria(inputs),

ntd_spend_table = tableNTDSpend(inputs),

ntd_table = tableNTD(inputs),

nutrition_table = tableNutrition(nutri_gender, nutrition_cmp),

oda_table = tableODA(inputs),

pqi_table = tablePQI(inputs),

psi_table = tablePSI(),

polio_table = tablePolio(),

pfm_table = tablePFM(pfm), # no double counting to be added

wash_table = tableWASH(wash),

# Make all the tables into a list. If there are 'missing' tables or ones being
# brought in from elsewhere you need to include them in the right order as the
# data in 'tables_titles.csv'. Here its just named tibbles.
tables_list = list(a2f_table,
                 tibble("CDC"), #named tibble of 'missing' or 'to be added manually' table
                 tibble("Climate Finance"), #named tibble of 'missing' or 'to be added manually' table
                 tibble("Dev Cap"), #named tibble of 'missing' or 'to be added manually' table
                 education_table,
                 energy_table,
                 fp_total_table,
                 fp_additional_table,
                 tibble("FCAS"),
                 humanitarian_table,
                 tibble("Immunisations"),
                 tibble("Improving Tax"),
                 tibble("Investment in the Multilateral System"),
                 jobs_table,
                 tibble("Malaria: Spend"),
                 tibble("Neglected Tropical Diseases: Spend"),
                 tibble("Neglected Tropical Diseases"),
                 nutrition_table,
                 tibble("Official Development Assistance (ODA)"),
                 tibble("Portfolio Quality Index"),
                 tibble("Private Sector Investment"),
                 tibble("Polio"),
                 pfm_table,
                 wash_table),

# output tables
tables = makeTables(lst_data = tables_list, tables_titles = tables_titles), #NEED TO ADD warning/error message: will error if nrow tables titles != length tables list





#### Report ----

## knit .Rnw
sections = c(
               "doc/titlepage/titlepage",
               "doc/frontmatter/frontmatter",
               "doc/intro/intro",
               "doc/a2f/a2f",
               "doc/cdc/cdc",
               "doc/climate/climate",
               "doc/devcap/devcap",
               "doc/education/education",
               "doc/energy/energy",
               "doc/ntd/ntd",
               "doc/family/family",
               "doc/fcas/fcas",
               "doc/humanitarian/humanitarian",
               "doc/immunisation/immunisation",
               "doc/tax/tax",
               "doc/multi/multi",
               "doc/jobs/jobs",
               "doc/malaria_spend/malaria_spend",
               "doc/ntd_spend/ntd_spend",
               "doc/ntd/ntd",
               "doc/nutrition/nutrition",
               "doc/oda/oda",
               "doc/pqi/pqi",
               "doc/private/private",
               "doc/polio/polio",
               "doc/pfm/pfm",
               "doc/wash/wash",

               "main"
),


report = knitAll(files=sections),

compile = system("xelatex main.tex --output-directory=report --aux-directory=report")

)

