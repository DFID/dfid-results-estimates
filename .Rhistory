disable(project = NULL, restart = TRUE)
getwd()
oda_gni <- read_csv("data/sid_oda_annual.csv") %>% janitor::clean_names(.)
the_plan <-
drake_plan(
## load template data
template_path <- "C:/Users/c-baillie/DFID/Results Teamsite - Documents",
# remote from templates
education_raw <- readEducation(template_path),
family_raw <- readFamily(template_path),
humanitarian_raw <- readHumanitarian(template_path),
nutrition_raw <- readNutrition(template_path),
pfm_raw <- readPFM(template_path),
a2f_raw <- readA2F(template_path),
# remote from Master Tables
#dept_raw <- readDeptData("Z:")
# local awkward ones
jobs <- read_csv("data/jobs.csv"),
multilat <- read_csv("data/multilat.csv"),
family_drf <- read_csv("data/family_drf.csv"),
education_cmp <- read_csv("data/education_cmp.csv"),
oda_gni <- read_csv("data/sid_oda_annual.csv") %>% janitor::clean_names(.),
#education
lookup <- read_csv("data/dept_lookup.csv"),
source("packages.R")
## format data (comment out if data loaded from MasterTables)
education_tidy <- tidyEducation(education_raw),
family_tidy <- tidyFamily(family_raw),
humanitarian_tidy <- tidyHumanitarian("Z:"),
nutrition_tidy <- tidyNutrition("Z:"),
pfm_tidy <- tidyPFM("Z:"),
a2f_tidy <- tidyA2F("Z:"),
## cat data
master <- bind_rows(education_tidy, family_tidy, humanitarian_tidy, nutrition_tidy, pfm_tidy, a2f_tidy, jobs, multilat),
## filter data
## plots
## tables
# write(line,file="myfile",append=TRUE) # will have to append xtable to files somehow with captions etc in the right places. maybe a func to grep out the correct lines.
## knit .Rnw
knit2tex(""),
## compile .tex
system("xelatex.exe doc/main.tex")
)
source("packages.R")
oda_gni <- read_csv("data/sid_oda_annual.csv") %>% janitor::clean_names(.)
oda_gni
## Load your R files
lapply(list.files("./R", full.names = TRUE), source)
lapply(list.files("./R", full.names = TRUE), source)
source("./packages.R")
lapply(list.files("./R", full.names = TRUE), source)
library(conflicted)
library(dplyr)
library(dotenv)
library(drake)
library(ggplot2)
library(govstyle)
library(patchwork)
library(gt)
library(here)
library(janitor)
library(knitr)
library(lubridate)
library(magrittr)
library(openxlsx)
library(scales)
library(stringr)
library(tidyr)
library(readr)
library(zoo)
conflict_prefer("filter","dplyr")
source("./R/plotOdaGni.R")
oda_gni <- read_csv("data/sid_oda_annual.csv") %>% janitor::clean_names(.)
plotODA_GNI()
plotODA_GNI(oda_gni)
plotODA_GNI
plotODA_GNI <- function(data){
bar_plot <- ggplot(data, aes(x=year, y=oda)) +
geom_bar(stat = "identity", fill=c(rep(gov_cols[10],nrow(sid)-1),darken(gov_cols[10])), color=darken(gov_cols[10]), size=0.5) +
govstyle::theme_gov() +
xlab("") +
ylab("Total ODA (GBP Million)") +
labs(
title="UK Official Development Assistance (ODA)",
subtitle = "Total ODA (A) and ODA:GNI percentage (B) between 1970 and 2018 \n\n",
caption = "\n* 2019 is shown in darker shade to indicate that it is a provisional figure"
) +
theme(
axis.title.x = element_text(vjust=-1),
axis.title.y = element_text(hjust=1),
panel.grid.major.y = element_line(colour = "grey80"),
panel.grid.major.x = element_blank(),
plot.subtitle = element_text(hjust = 1, vjust=-2)
) +
scale_y_continuous(breaks=c(seq(0, 16000, by = 2000), 16000)) +
expand_limits(y = c(0,16000)) +
scale_x_continuous(breaks=c(seq(min(sid$year), max(sid$year),by=5),2019)) +
annotate("segment", x = 2010, xend = 2018, y = 15000, yend = 14552, colour = "black") +
annotate("text", x = 2005, y = 15000, label = "2018: Introduction of Grant \n Equivalent Measure", size=3) +
annotate("text", x = 1970, y = 17000, label = "A", size=5, fontface="bold")
line_plot <- ggplot(data, aes(x=year, y=oda_gni)) +
geom_hline(yintercept=0.7, linetype="dashed",
color = "grey70", size=1) +
geom_vline(xintercept = 2013, linetype="dotted",
color = gov_cols[10], size=1) +
geom_line(color=gov_cols[8], size=1.5) +
govstyle::theme_gov() +
xlab("Year") +
ylab("ODA:GNI (%)") +
labs(
#title="UK Official Development Assistance (ODA)",
#subtitle = "ODA Level between 1970 and 2019 \n\n",
) +
theme(
axis.title.x = element_text(vjust=-1),
axis.title.y = element_text(hjust=1),
panel.grid.major.y = element_line(colour = "grey80"),
panel.grid.major.x = element_blank(),
plot.subtitle = element_text(hjust = 1, vjust=-2)
) +
scale_y_continuous(breaks=c(seq(0, 1, by = 0.1))) +
expand_limits(y = c(0,0.8)) +
scale_x_continuous(breaks=c(seq(min(sid$year), 2010,by=5),2013,2019)) +
annotate("text", x = 1972, y = 0.66, label = "UN 0.7% target", color="grey70", fontface="bold")+
annotate("text", x = 1970, y = 0.85, label = "B", size=5, fontface="bold")
oda_plot <- bar_plot / line_plot
pdf(file="../figs/oda_plot.pdf",
width=8,
height=9,
pointsize=12)
print(oda_plot)
dev.off()
}
plotODA_GNI(oda_gni)
plotODA_GNI <- function(data){
bar_plot <- ggplot(data, aes(x=year, y=oda)) +
geom_bar(stat = "identity", fill=c(rep(gov_cols[10],nrow(data)-1),darken(gov_cols[10])), color=darken(gov_cols[10]), size=0.5) +
govstyle::theme_gov() +
xlab("") +
ylab("Total ODA (GBP Million)") +
labs(
title="UK Official Development Assistance (ODA)",
subtitle = "Total ODA (A) and ODA:GNI percentage (B) between 1970 and 2018 \n\n",
caption = "\n* 2019 is shown in darker shade to indicate that it is a provisional figure"
) +
theme(
axis.title.x = element_text(vjust=-1),
axis.title.y = element_text(hjust=1),
panel.grid.major.y = element_line(colour = "grey80"),
panel.grid.major.x = element_blank(),
plot.subtitle = element_text(hjust = 1, vjust=-2)
) +
scale_y_continuous(breaks=c(seq(0, 16000, by = 2000), 16000)) +
expand_limits(y = c(0,16000)) +
scale_x_continuous(breaks=c(seq(min(data$year), max(data$year),by=5),2019)) +
annotate("segment", x = 2010, xend = 2018, y = 15000, yend = 14552, colour = "black") +
annotate("text", x = 2005, y = 15000, label = "2018: Introduction of Grant \n Equivalent Measure", size=3) +
annotate("text", x = 1970, y = 17000, label = "A", size=5, fontface="bold")
line_plot <- ggplot(data, aes(x=year, y=oda_gni)) +
geom_hline(yintercept=0.7, linetype="dashed",
color = "grey70", size=1) +
geom_vline(xintercept = 2013, linetype="dotted",
color = gov_cols[10], size=1) +
geom_line(color=gov_cols[8], size=1.5) +
govstyle::theme_gov() +
xlab("Year") +
ylab("ODA:GNI (%)") +
labs(
#title="UK Official Development Assistance (ODA)",
#subtitle = "ODA Level between 1970 and 2019 \n\n",
) +
theme(
axis.title.x = element_text(vjust=-1),
axis.title.y = element_text(hjust=1),
panel.grid.major.y = element_line(colour = "grey80"),
panel.grid.major.x = element_blank(),
plot.subtitle = element_text(hjust = 1, vjust=-2)
) +
scale_y_continuous(breaks=c(seq(0, 1, by = 0.1))) +
expand_limits(y = c(0,0.8)) +
scale_x_continuous(breaks=c(seq(min(data$year), 2010,by=5),2013,2019)) +
annotate("text", x = 1972, y = 0.66, label = "UN 0.7% target", color="grey70", fontface="bold")+
annotate("text", x = 1970, y = 0.85, label = "B", size=5, fontface="bold")
oda_plot <- bar_plot / line_plot
pdf(file="../figs/oda_plot.pdf",
width=8,
height=9,
pointsize=12)
print(oda_plot)
dev.off()
}
plotODA_GNI(oda_gni)
plotODA_GNI <- function(data){
bar_plot <- ggplot(data, aes(x=year, y=oda)) +
geom_bar(stat = "identity", fill=c(rep(gov_cols[10],nrow(data)-1),darken(gov_cols[10])), color=darken(gov_cols[10]), size=0.5) +
govstyle::theme_gov() +
xlab("") +
ylab("Total ODA (GBP Million)") +
labs(
title="UK Official Development Assistance (ODA)",
subtitle = "Total ODA (A) and ODA:GNI percentage (B) between 1970 and 2018 \n\n",
caption = "\n* 2019 is shown in darker shade to indicate that it is a provisional figure"
) +
theme(
axis.title.x = element_text(vjust=-1),
axis.title.y = element_text(hjust=1),
panel.grid.major.y = element_line(colour = "grey80"),
panel.grid.major.x = element_blank(),
plot.subtitle = element_text(hjust = 1, vjust=-2)
) +
scale_y_continuous(breaks=c(seq(0, 16000, by = 2000), 16000)) +
expand_limits(y = c(0,16000)) +
scale_x_continuous(breaks=c(seq(min(data$year), max(data$year),by=5),2019)) +
annotate("segment", x = 2010, xend = 2018, y = 15000, yend = 14552, colour = "black") +
annotate("text", x = 2005, y = 15000, label = "2018: Introduction of Grant \n Equivalent Measure", size=3) +
annotate("text", x = 1970, y = 17000, label = "A", size=5, fontface="bold")
line_plot <- ggplot(data, aes(x=year, y=oda_gni)) +
geom_hline(yintercept=0.7, linetype="dashed",
color = "grey70", size=1) +
geom_vline(xintercept = 2013, linetype="dotted",
color = gov_cols[10], size=1) +
geom_line(color=gov_cols[8], size=1.5) +
govstyle::theme_gov() +
xlab("Year") +
ylab("ODA:GNI (%)") +
labs(
#title="UK Official Development Assistance (ODA)",
#subtitle = "ODA Level between 1970 and 2019 \n\n",
) +
theme(
axis.title.x = element_text(vjust=-1),
axis.title.y = element_text(hjust=1),
panel.grid.major.y = element_line(colour = "grey80"),
panel.grid.major.x = element_blank(),
plot.subtitle = element_text(hjust = 1, vjust=-2)
) +
scale_y_continuous(breaks=c(seq(0, 1, by = 0.1))) +
expand_limits(y = c(0,0.8)) +
scale_x_continuous(breaks=c(seq(min(data$year), 2010,by=5),2013,2019)) +
annotate("text", x = 1972, y = 0.66, label = "UN 0.7% target", color="grey70", fontface="bold")+
annotate("text", x = 1970, y = 0.85, label = "B", size=5, fontface="bold")
oda_plot <- bar_plot / line_plot
pdf(file="figs/oda_plot.pdf",
width=8,
height=9,
pointsize=12)
print(oda_plot)
dev.off()
}
plotODA_GNI(oda_gni)
.libPaths()
#' Read in SDP templates
#'
#' Extracts the dept results from SDP templates ready for formatting
#' @param path path to parent directory without trailling forward /. e.g. "Z:"
#' @keywords internal
#' @importFrom magrittr %>%
#' @examples readXXX(path)
#' @export
readDepData <- function(path){
africaPath <- paste0(path, "/", list.files(path)[grep("Template Africa", list.files(path))], "/")
asiaPath <- paste0(path, "/", list.files(path)[grep("Template Asia", list.files(path))], "/")
otherPath <- paste0(path, "/", list.files(path)[grep("Templates Other", list.files(path))], "/")
policyPath <- paste0(path, "/", list.files(path)[grep("Templates Policy", list.files(path))], "/")
africaFiles <- list.files(africaPath)
asiaFiles <- list.files(asiaPath)
otherFiles <- list.files(otherPath)
policyFiles <- list.files(policyPath)
files <- c(paste0(africaPath,africaFiles),paste0(asiaPath,asiaFiles),paste0(otherPath,otherFiles),paste0(policyPath,policyFiles))
dep <- files %>%
purrr::map(purrr::safely(
function(file){ # iterate through each file name
africa <- readxl::read_xlsx(file, sheet="Department.Data")
}
)
) %>%
purrr::map(function(x){if(is.null(x$error)){x$result}else{x$error}})
dep <- dplyr::bind_rows(dep)
return(dep)
}
test <- readDepData("C:\\Users\\c-baillie\\DFID\\Results Teamsite - Documents")
library(tidyverse)
test <- readDepData("C:\\Users\\c-baillie\\DFID\\Results Teamsite - Documents")
head(test)
str(test)
head(test)
glimpse(test)
plotOdaGni <- function(data){
bar_plot <- ggplot(data, aes(x=year, y=oda)) +
geom_bar(stat = "identity", fill=c(rep(gov_cols[10],nrow(data)-1),darken(gov_cols[10])), color=darken(gov_cols[10]), size=0.5) +
govstyle::theme_gov() +
xlab("") +
ylab("Total ODA (GBP Million)") +
labs(
title="UK Official Development Assistance (ODA)",
subtitle = "Total ODA (A) and ODA:GNI percentage (B) between 1970 and 2018 \n\n",
caption = "\n* 2019 is shown in darker shade to indicate that it is a provisional figure"
) +
theme(
axis.title.x = element_text(vjust=-1),
axis.title.y = element_text(hjust=1),
panel.grid.major.y = element_line(colour = "grey80"),
panel.grid.major.x = element_blank(),
plot.subtitle = element_text(hjust = 1, vjust=-2)
) +
scale_y_continuous(breaks=c(seq(0, 16000, by = 2000), 16000)) +
expand_limits(y = c(0,16000)) +
scale_x_continuous(breaks=c(seq(min(data$year), max(data$year),by=5),2019)) +
annotate("segment", x = 2010, xend = 2018, y = 15000, yend = 14552, colour = "black") +
annotate("text", x = 2005, y = 15000, label = "2018: Introduction of Grant \n Equivalent Measure", size=3) +
annotate("text", x = 1970, y = 17000, label = "A", size=5, fontface="bold")
line_plot <- ggplot(data, aes(x=year, y=oda_gni)) +
geom_hline(yintercept=0.7, linetype="dashed",
color = "grey70", size=1) +
geom_vline(xintercept = 2013, linetype="dotted",
color = gov_cols[10], size=1) +
geom_line(color=gov_cols[8], size=1.5) +
govstyle::theme_gov() +
xlab("Year") +
ylab("ODA:GNI (%)") +
labs(
#title="UK Official Development Assistance (ODA)",
#subtitle = "ODA Level between 1970 and 2019 \n\n",
) +
theme(
axis.title.x = element_text(vjust=-1),
axis.title.y = element_text(hjust=1),
panel.grid.major.y = element_line(colour = "grey80"),
panel.grid.major.x = element_blank(),
plot.subtitle = element_text(hjust = 1, vjust=-2)
) +
scale_y_continuous(breaks=c(seq(0, 1, by = 0.1))) +
expand_limits(y = c(0,0.8)) +
scale_x_continuous(breaks=c(seq(min(data$year), 2010,by=5),2013,2019)) +
annotate("text", x = 1972, y = 0.66, label = "UN 0.7% target", color="grey70", fontface="bold")+
annotate("text", x = 1970, y = 0.85, label = "B", size=5, fontface="bold")
oda_plot <- bar_plot / line_plot
pdf(file="figs/oda_plot.pdf",
width=8,
height=9,
pointsize=12)
print(oda_plot)
dev.off()
}
library(tidyverse)
library(conflicted)
conflicted("filter", "dplyr", "stats")
library(conflicted)
conflict_prefer("filter", "dplyr", "stats")
getwd()
readxl::read_xlsx("C:/Users/c-baillie/OneDrive - DFID/Desktop/hammer-tiger.xlsx")
shark <- readxl::read_xlsx("C:/Users/c-baillie/OneDrive - DFID/Desktop/hammer-tiger.xlsx")
shark  %>% select(1:3)
shark  %<>% select(1:3)
library(magrittr)
shark %<>% select(1:3)
shapiro.test(shark$Sphyrna_lewini)
qqnorm(shark$Sphyrna_lewini)
glm(Sphyrna_lewini ~ Galeocerdo_cuvier +  time)
glm(Sphyrna_lewini ~ Galeocerdo_cuvier +  time, data=shark)
mod1 <- glm(Sphyrna_lewini ~ Galeocerdo_cuvier +  time, data=shark)
summary(mod1)
ggplot(shark) %>%
geom_line(aes(x=time,y=Sphyrna_lewini))
ggplot(shark) +
geom_line(aes(x=time,y=Sphyrna_lewini))
shark
ggplot(shark, aes(x=time,y=Sphyrna_lewini))+
geom_boxplot()
ggplot(shark, aes(x=time,y=Sphyrna_lewini))+
geom_boxplot() +
stat_summary(fun=mean, geom="line", aes(group=1))
ggplot(shark, aes(x=time,y=Sphyrna_lewini,   group=time))+
geom_boxplot() +
stat_summary(fun=mean, geom="line", aes(group=1))
ggplot(shark, aes(x=time,y=Sphyrna_lewini,   group=time))+
geom_boxplot() +
stat_summary(fun=mean, geom="line", aes(group=1)) +
geom_boxplot(aes(x=time,y=Galeocerdo_cuvier,   group=time))
ggplot(shark, aes(x=time,y=Sphyrna_lewini,   group=time))+
geom_boxplot() +
stat_summary(fun=mean, geom="line", aes(group=1)) +
geom_boxplot(aes(x=time,y=Galeocerdo_cuvier,   group=time)) +
stat_summary(fun=mean, geom="line", aes(group=2))
shark %>% pivot_longer(.,
cols=1:2,
names_to = c("sp", "reads"))
shark %>% pivot_longer(.,
cols=1:2,
names_to = c("reads"))
shark %>% pivot_longer(.,
cols=1:2,
names_to = c("sp"))
shark <- readxl::read_xlsx("C:/Users/c-baillie/OneDrive - DFID/Desktop/hammer-tiger.xlsx")
shark %<>% select(1:3) %>%  pivot_longer(.,
cols=1:2,
names_to = c("sp"))
shark
df<- data.frame (VPD.mean=rnorm(100,mean=2,sd=0.8), treatment=c("ambient","elevated"), variable=rnorm(100,mean=50,sd=10))
df$group <- cut(df$VPD.mean,
breaks=c(0,seq(1,3,by=0.5),Inf),
labels=c("0-1","1-1.5","1.5-2","2-2.5","2.5-3",">3"))
df
ggplot(shark) +
geom_boxplot(aes(x=factor(time),y=value,fill=sp),
position=position_dodge(.7),width=.8)
ggplot(shark) +
geom_boxplot(aes(x=factor(time),y=value,fill=sp),
position=position_dodge(.7),width=.8)+
geom_smooth(aes(x=as.integer(time),y=value,color=sp,fill=sp),method=loess)
ggplot(shark) +
geom_boxplot(aes(x=factor(time),y=value,fill=sp),
position=position_dodge(.7),width=.8)+
geom_point(aes(fill = sp), size = 5, shape = 21, position = position_jitterdodge()) +
geom_smooth(aes(x=as.integer(time),y=value,color=sp,fill=sp),method=loess)
ggplot(shark) +
geom_boxplot(aes(x=factor(time),y=value,fill=sp),
position=position_dodge(.7),width=.8)+
geom_point(aes(factor(time),y=value, fill = sp), size = 5, shape = 21, position = position_jitterdodge()) +
geom_smooth(aes(x=as.integer(time),y=value,color=sp,fill=sp),method=loess)
ggplot(shark) +
geom_boxplot(aes(x=factor(time),y=value,fill=sp),
position=position_dodge(.7),width=.8)+
geom_point(aes(factor(time),y=value, fill = sp), size = 2, shape = 21, position = position_jitterdodge()) +
geom_smooth(aes(x=as.integer(time),y=value,color=sp,fill=sp),method=loess)
ggplot(shark) +
geom_boxplot(aes(x=factor(time),y=value,fill=sp),
position=position_dodge(.7),width=.8)+
geom_point(aes(factor(time),y=value, fill = sp), size = 2, shape = 21, color=NA, position = position_jitterdodge()) +
geom_smooth(aes(x=as.integer(time),y=value,color=sp,fill=sp),method=loess)
ggplot(shark) +
geom_boxplot(aes(x=factor(time),y=value,fill=sp),
position=position_dodge(.7),width=.8)+
geom_point(aes(factor(time),y=value, fill = sp, color=sp), alpha=2, size = 2, shape = 21, position = position_jitterdodge()) +
geom_smooth(aes(x=as.integer(time),y=value,color=sp,fill=sp),method=loess)
ggplot(shark) +
geom_boxplot(aes(x=factor(time),y=value,fill=sp),
position=position_dodge(.7),width=.8)+
geom_point(aes(factor(time),y=value, fill = sp), size = 2, shape = 21, position = position_jitterdodge()) +
geom_smooth(aes(x=as.integer(time),y=value,color=sp,fill=sp),method=loess)
ggplot(shark) +
geom_boxplot(aes(x=factor(time),y=value,fill=sp),
position=position_dodge(.7),width=.8, outlier.shape = NA)+
geom_point(aes(factor(time),y=value, fill = sp), size = 2, shape = 21, position = position_jitterdodge()) +
geom_smooth(aes(x=as.integer(time),y=value,color=sp,fill=sp),method=loess)
ggplot(shark) +
geom_boxplot(aes(x=factor(time),y=value,fill=sp),
position=position_dodge(.7),width=.8, outlier.shape = NA)+
geom_point(aes(factor(time),y=value, fill = sp, color=sp), size = 2, alpha=2, shape = 21, position = position_jitterdodge()) +
geom_smooth(aes(x=as.integer(time),y=value,color=sp,fill=sp),method=loess)
ggplot(shark) +
geom_boxplot(aes(x=factor(time),y=value,fill=sp),
position=position_dodge(.7),width=.8, outlier.shape = NA)+
geom_point(aes(factor(time),y=value, fill = sp, color=sp), size = 2, alpha=0.5, shape = 21, position = position_jitterdodge()) +
geom_smooth(aes(x=as.integer(time),y=value,color=sp,fill=sp),method=loess)
ggplot(shark) +
geom_boxplot(aes(x=factor(time),y=value,fill=sp),
position=position_dodge(.7),width=.8, outlier.shape = NA)+
geom_point(aes(factor(time),y=value, fill = sp, color=sp), size = 2, alpha=0.2, shape = 21, position = position_jitterdodge()) +
geom_smooth(aes(x=as.integer(time),y=value,color=sp,fill=sp),method=loess)
ggplot(shark) +
geom_boxplot(aes(x=factor(time),y=value,fill=sp),
position=position_dodge(.7),width=.8, outlier.shape = NA)+
geom_point(aes(factor(time),y=value, fill = sp, color=sp), size = 2, alpha=0.3, shape = 21, position = position_jitterdodge()) +
geom_smooth(aes(x=as.integer(time),y=value,color=sp,fill=sp),method=loess)
